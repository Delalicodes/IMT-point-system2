generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = "file:./dev.db"
}

model User {
  id              String           @id @default(cuid())
  firstName       String
  lastName        String
  username        String           @unique
  password        String
  email           String?
  phoneNumber     String?
  role            String           @default("STUDENT")
  status          String           @default("ACTIVE")
  courseId        String?
  createdAt       DateTime         @default(now())
  updatedAt       DateTime         @updatedAt
  imageUrl        String?          @default("/images/default-avatar.png")
  messages        ChatMessage[]
  messageViews    MessageView[]
  points          Point[]
  course          Course?          @relation(fields: [courseId], references: [id])
  clockingRecords ClockingRecord[]

  @@index([role])
}

model Course {
  id          String   @id @default(uuid())
  name        String
  description String?
  subjects    String   @default("[]")
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  students    User[]
}

model Point {
  id        String   @id @default(uuid())
  points    Int
  note      String?
  userId    String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  user      User     @relation(fields: [userId], references: [id])
}

model ClockingRecord {
  id         String   @id @default(cuid())
  userId     String
  type       String
  timestamp  DateTime @default(now())
  totalHours Float?
  user       User     @relation(fields: [userId], references: [id])

  @@index([userId])
  @@map("clocking_records")
}

model ChatMessage {
  id        String        @id @default(cuid())
  content   String
  userId    String
  createdAt DateTime      @default(now())
  updatedAt DateTime      @updatedAt
  isReport  Boolean       @default(false)
  replyToId String?
  replyTo   ChatMessage?  @relation("Replies", fields: [replyToId], references: [id])
  replies   ChatMessage[] @relation("Replies")
  user      User          @relation(fields: [userId], references: [id])
  views     MessageView[]

  @@index([userId])
  @@index([replyToId])
}

model MessageView {
  id        String      @id @default(cuid())
  userId    String
  messageId String
  viewedAt  DateTime    @default(now())
  message   ChatMessage @relation(fields: [messageId], references: [id])
  user      User        @relation(fields: [userId], references: [id])

  @@unique([userId, messageId])
  @@index([userId])
  @@index([messageId])
}
