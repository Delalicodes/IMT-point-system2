// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = "file:./dev.db"
}

model User {
  id          String    @id @default(cuid())
  firstName   String
  lastName    String
  username    String    @unique
  password    String
  email       String?
  phoneNumber String?
  role        String    @default("STUDENT")
  status      String    @default("ACTIVE")
  courseId    String?
  course      Course?   @relation(fields: [courseId], references: [id])
  points      Point[]
  messages    ChatMessage[]
  clockingRecords ClockingRecord[]
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt

  @@index([role])
}

model Course {
  id          String    @id @default(uuid())
  name        String
  description String?
  subjects    String    @default("[]")  // JSON string of subject names with default empty array
  students    User[]
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
}

model Point {
  id        String   @id @default(uuid())
  points    Int
  note      String?
  userId    String
  user      User     @relation(fields: [userId], references: [id])
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model ClockingRecord {
  id          String    @id @default(cuid())
  userId      String
  type        String    // IN, BREAK, OUT
  timestamp   DateTime  @default(now())
  totalHours  Float?    // Only set when type is OUT
  user        User      @relation(fields: [userId], references: [id])

  @@index([userId])
  @@map("clocking_records")
}

model ChatMessage {
  id        String   @id @default(cuid())
  content   String
  userId    String
  user      User     @relation(fields: [userId], references: [id])
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  isReport  Boolean  @default(false)

  @@index([userId])
}
